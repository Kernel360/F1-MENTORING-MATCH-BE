plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.biengual'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    /**
     * If any dependency is added, please classify by using comments for others.
     * If some dependency is not suitable classification, anyone can change that.
     */

    // DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    compileOnly 'org.projectlombok:lombok:1.18.28' // 최신 버전 사용
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-groovy-templates'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
    implementation 'org.webjars:webjars-locator-core'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.javassist:javassist:3.15.0-GA'
    implementation 'javax.xml.bind:jaxb-api:2.3.1' //xml 문서와 자바 객체 간 매핑을 자동화
    implementation 'javax.servlet:javax.servlet-api:4.0.1'


    // Lombok
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
//	implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
//	implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.15'

    //Querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // JWT OAuth
    implementation 'io.jsonwebtoken:jjwt:0.9.1' //자바 jwt  라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' //OAuth2 의존성 추가

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    testImplementation 'org.springframework.security:spring-security-test'

    // Selenium
    implementation 'org.seleniumhq.selenium:selenium-java:4.25.0'
    implementation 'io.github.bonigarcia:webdrivermanager:5.8.0'

    // Google API
    // Google API Client
    implementation 'com.google.api-client:google-api-client:1.34.0' // 최신 안정 버전
    // YouTube Data API
    implementation 'com.google.apis:google-api-services-youtube:v3-rev20240916-2.0.0' // 최신 안정 버전
    // Google HTTP Client for JSON
    implementation 'com.google.http-client:google-http-client-gson:1.39.2'
    // Google Credentials
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.19.0'

    // Jsoup
    implementation 'org.jsoup:jsoup:1.17.2'

    // Microsoft Azure Translator
    implementation "com.squareup.okhttp3:okhttp:4.10.0"
    implementation "com.google.code.gson:gson:2.9.0"

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.1.0'

    // Flyway
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
    main.java.srcDirs += [querydslDir]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
    file(querydslDir).deleteDir()
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('bootJar') {
    enabled = true
}

tasks.named('jar') {
    enabled = false
}
