spring:
  config:
    import:
      - optional:file:.env[.properties]
    activate:
      on-profile: local

  datasource:
    url: ${MY_LOCAL_DATA_SOURCE}
    username: ${DB_ROOT_USERNAME}
    password: ${DB_ROOT_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  data:
    redis:
      host: localhost
      port: 6379
      password: ${DB_ROOT_PASSWORD}
      username: default

    mongodb:
      uri: ${MONGO_LOCAL_URI}
      database: admin
      username: ${DB_ROOT_USERNAME}
      password: ${DB_ROOT_PASSWORD}

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${MY_GOOGLE_CLIENT_ID}
            client-secret: ${MY_GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile
#              - https://www.googleapis.com/auth/youtube.force-ssl
#              - https://www.googleapis.com/auth/youtube.readonly
          kakao:
            client-id: ${MY_KAKAO_CLIENT_ID}
            client-secret: ${MY_KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: ${MY_KAKAO_LOCAL_REDIRECT_URI}
            client-name: kakao
          naver:
            client-id: ${MY_NAVER_CLIENT_ID}
            client-secret: ${MY_NAVER_CLIENT_SECRET}
            redirect-uri: ${MY_NAVER_LOCAL_REDIRECT_URI}
            authorization-grant-type: authorization_code
      success:
        redirect-uri: ${OAUTH2_SUCCESS_LOCAL_REDIRECTION_PATH}

nlp:
  model:
    word2vec: ${WORD2VEC_MODEL_FILE_PATH}

perplexity:
  api-key: ${PERPLEXITY_API_KEY}
  base-url: https://api.perplexity.ai

opensearch:
  host: ${OPEN_SEARCH_LOCAL_HOST}
  port: ${OPEN_SEARCH_LOCAL_PORT}
  protocol: ${OPEN_SEARCH_HTTP_PROTOCOL}
  username: ${OPEN_SEARCH_ROOT_USERNAME} # OpenSearch 기본 관리자 계정 (보안 플러그인 활성화 시)
  password: ${OPEN_SEARCH_ROOT_USERNAME} # OpenSearch 기본 비밀번호 (보안 플러그인 활성화 시)
  index: ${OPEN_SEARCH_LOCAL_INDEX}